tmp=intersect(as.vector(unlist((paper_marker[cell]))),row.names(sam))
markers=intersect(tmp,row.names(marker_exp))
count=length(markers)
for (gene in markers){
weight=log10(sam[gene,i]+1)/(marker_exp[gene,cell])
abun=abun+weight
}
cell_r=c(cell_r,abun*nes[cell]/count)
}else{
cell_r=c(cell_r,0)
}
}
abundance_all_sample=rbind(abundance_all_sample,cell_r)
}
row.names(abundance_all_sample)=colnames(result)
#colnames(abundance_all_sample)=colnames(marker_exp)
norm_func=function(x){
s=sum(x)
ratio=1/s
x=x*ratio
return (x)
}
abundance_all_sample_norm=t(apply(abundance_all_sample,1,norm_func))
t=abundance_all_sample_norm
cell_combine=cbind(t[,1],t[,2],t[,3],t[,4],t[,5]+t[,6]+t[,7],t[,8]+t[,9]+t[,10]+t[,11],t[,12],t[,13],t[,14],t[,15],t[,16])
colnames(cell_combine)=c("CD4_naive","CD8_naive","Cytotoxic","Exhausted","Treg","Th","Central_memory","Effector_memory","NKT","MAIT","Gamma_delta")
pheatmap(cell_combine,scale="row")
cor(cell_ratio[,1], cell_combine[,2])
cor(cell_ratio[,2], cell_combine[,10])
cor(cell_ratio[,3], cell_combine[,4])
cor(cell_ratio[,4], cell_combine[,1])
cor(cell_ratio[,5], cell_combine[,5])
cor(cell_ratio[,6], cell_combine[,6])
load("paper_marker.Rdata")
sample=lung_single_cell_exp
sam=apply(sample,2,as.numeric)
row.names(sam)=row.names(sample)
# load("T_cell_gene_set.Rdata")
# load("T_subtype_marker_new.Rdata")
#load("marker_exp.Rdata")
#genes=intersect(row.names(sam),as.vector(unlist(T_subtype_new_marker)))
#genes=intersect(row.names(sam),as.vector(unlist(T_cell_gene_set)))
genes=intersect(row.names(sam),as.vector(unlist(paper_marker)))
sam_exp=sam[genes,]
results=gsva(sam_exp,paper_marker,method="ssgsea")
neg2zero=function(x){
x[which(x<0)]=0
return(x)
}
results=apply(results,2,neg2zero)
results = results - apply(results,1,min)
result=results
#result=gsva(sam,marker_test)
#result=gsva(sam,marker_test,method="ssgsea")
#result=gsva(sam_exp,T_subtype_new_marker,method="ssgsea")
abundance_all_sample=c()
for (i in colnames(result)){
nes=result[,i]
cell_type=names(nes)
cell_r=c()
for (cell in cell_type){
if(nes[cell]>0){
abun=0
tmp=intersect(as.vector(unlist((paper_marker[cell]))),row.names(sam))
markers=intersect(tmp,row.names(marker_exp))
count=length(markers)
for (gene in markers){
weight=log10(sam[gene,i]+1)/(marker_exp[gene,cell])
abun=abun+weight
}
cell_r=c(cell_r,abun*nes[cell]/count)
}else{
cell_r=c(cell_r,0)
}
}
abundance_all_sample=rbind(abundance_all_sample,cell_r)
}
row.names(abundance_all_sample)=colnames(result)
#colnames(abundance_all_sample)=colnames(marker_exp)
norm_func=function(x){
s=sum(x)
ratio=1/s
x=x*ratio
return (x)
}
abundance_all_sample_norm=t(apply(abundance_all_sample,1,norm_func))
t=abundance_all_sample_norm
cell_combine=cbind(t[,1],t[,2],t[,3],t[,4],t[,5]+t[,6]+t[,7],t[,8]+t[,9]+t[,10]+t[,11],t[,12],t[,13],t[,14],t[,15],t[,16])
colnames(cell_combine)=c("CD4_naive","CD8_naive","Cytotoxic","Exhausted","Treg","Th","Central_memory","Effector_memory","NKT","MAIT","Gamma_delta")
pheatmap(cell_combine,scale="row")
cor(lung_cell_ratio[,1], cell_combine[,1])
cor(lung_cell_ratio[,2], cell_combine[,7])
cor(lung_cell_ratio[,3], cell_combine[,5])
cor(lung_cell_ratio[,4], cell_combine[,2])
cor(lung_cell_ratio[,5], cell_combine[,4])
cor(lung_cell_ratio[,6], cell_combine[,10])
MAIT=c("CD3D","CD3E","CD3G","KLRB1","IGHMBP2","CCR5","SLC4A10","CD8A","CD8B")
Gamma_delta=c("CD3D","CD3E","CD3G","TCRA")
all_genes=unique(c(CD4_naive,CD8_naive,Cytotoxic,Exhausted,Tr1,nTreg,iTreg,Th1,Th2,Th17,Tfh,Central_memory,Effector_memory,NKT,MAIT,Gamma_delta))
paper_marker=list(CD4_naive=CD4_naive,CD8_naive=CD8_naive,Cytotoxic=Cytotoxic,Exhausted=Exhausted,Tr1=Tr1,nTreg=nTreg,iTreg=iTreg,Th1=Th1,Th2=Th2,
Th17=Th17,Tfh=Tfh,Central_memory=Central_memory,Effector_memory=Effector_memory,NKT=NKT,MAIT=MAIT,Gamma_delta=Gamma_delta)
save(paper_marker,file="paper_marker.Rdata")
load("paper_marker.Rdata")
sample=liver_single_cell_exp
sam=apply(sample,2,as.numeric)
row.names(sam)=row.names(sample)
# load("T_cell_gene_set.Rdata")
# load("T_subtype_marker_new.Rdata")
#load("marker_exp.Rdata")
#genes=intersect(row.names(sam),as.vector(unlist(T_subtype_new_marker)))
#genes=intersect(row.names(sam),as.vector(unlist(T_cell_gene_set)))
genes=intersect(row.names(sam),as.vector(unlist(paper_marker)))
sam_exp=sam[genes,]
results=gsva(sam_exp,paper_marker,method="ssgsea")
results = results - apply(results,1,min)
result=results
#result=gsva(sam,marker_test)
#result=gsva(sam,marker_test,method="ssgsea")
#result=gsva(sam_exp,T_subtype_new_marker,method="ssgsea")
abundance_all_sample=c()
for (i in colnames(result)){
nes=result[,i]
cell_type=names(nes)
cell_r=c()
for (cell in cell_type){
if(nes[cell]>0){
abun=0
tmp=intersect(as.vector(unlist((paper_marker[cell]))),row.names(sam))
markers=intersect(tmp,row.names(marker_exp))
count=length(markers)
for (gene in markers){
weight=log10(sam[gene,i]+1)/(marker_exp[gene,cell])
abun=abun+weight
}
cell_r=c(cell_r,abun*nes[cell]/count)
}else{
cell_r=c(cell_r,0)
}
}
abundance_all_sample=rbind(abundance_all_sample,cell_r)
}
row.names(abundance_all_sample)=colnames(result)
#colnames(abundance_all_sample)=colnames(marker_exp)
norm_func=function(x){
s=sum(x)
ratio=1/s
x=x*ratio
return (x)
}
abundance_all_sample_norm=t(apply(abundance_all_sample,1,norm_func))
t=abundance_all_sample_norm
cell_combine=cbind(t[,1],t[,2],t[,3],t[,4],t[,5]+t[,6]+t[,7],t[,8]+t[,9]+t[,10]+t[,11],t[,12],t[,13],t[,14],t[,15],t[,16])
colnames(cell_combine)=c("CD4_naive","CD8_naive","Cytotoxic","Exhausted","Treg","Th","Central_memory","Effector_memory","NKT","MAIT","Gamma_delta")
pheatmap(cell_combine,scale="row")
cor(cell_ratio[,1], cell_combine[,2])
cor(cell_ratio[,2], cell_combine[,10])
cor(cell_ratio[,3], cell_combine[,4])
cor(cell_ratio[,4], cell_combine[,1])
cor(cell_ratio[,5], cell_combine[,5])
cor(cell_ratio[,6], cell_combine[,6])
load("paper_marker.Rdata")
sample=lung_single_cell_exp
sam=apply(sample,2,as.numeric)
row.names(sam)=row.names(sample)
# load("T_cell_gene_set.Rdata")
# load("T_subtype_marker_new.Rdata")
#load("marker_exp.Rdata")
#genes=intersect(row.names(sam),as.vector(unlist(T_subtype_new_marker)))
#genes=intersect(row.names(sam),as.vector(unlist(T_cell_gene_set)))
genes=intersect(row.names(sam),as.vector(unlist(paper_marker)))
sam_exp=sam[genes,]
results=gsva(sam_exp,paper_marker,method="ssgsea")
neg2zero=function(x){
x[which(x<0)]=0
return(x)
}
results=apply(results,2,neg2zero)
results = results - apply(results,1,min)
result=results
#result=gsva(sam,marker_test)
#result=gsva(sam,marker_test,method="ssgsea")
#result=gsva(sam_exp,T_subtype_new_marker,method="ssgsea")
abundance_all_sample=c()
for (i in colnames(result)){
nes=result[,i]
cell_type=names(nes)
cell_r=c()
for (cell in cell_type){
if(nes[cell]>0){
abun=0
tmp=intersect(as.vector(unlist((paper_marker[cell]))),row.names(sam))
markers=intersect(tmp,row.names(marker_exp))
count=length(markers)
for (gene in markers){
weight=log10(sam[gene,i]+1)/(marker_exp[gene,cell])
abun=abun+weight
}
cell_r=c(cell_r,abun*nes[cell]/count)
}else{
cell_r=c(cell_r,0)
}
}
abundance_all_sample=rbind(abundance_all_sample,cell_r)
}
row.names(abundance_all_sample)=colnames(result)
#colnames(abundance_all_sample)=colnames(marker_exp)
norm_func=function(x){
s=sum(x)
ratio=1/s
x=x*ratio
return (x)
}
abundance_all_sample_norm=t(apply(abundance_all_sample,1,norm_func))
t=abundance_all_sample_norm
cell_combine=cbind(t[,1],t[,2],t[,3],t[,4],t[,5]+t[,6]+t[,7],t[,8]+t[,9]+t[,10]+t[,11],t[,12],t[,13],t[,14],t[,15],t[,16])
colnames(cell_combine)=c("CD4_naive","CD8_naive","Cytotoxic","Exhausted","Treg","Th","Central_memory","Effector_memory","NKT","MAIT","Gamma_delta")
pheatmap(cell_combine,scale="row")
cor(lung_cell_ratio[,1], cell_combine[,1])
cor(lung_cell_ratio[,2], cell_combine[,7])
cor(lung_cell_ratio[,3], cell_combine[,5])
cor(lung_cell_ratio[,4], cell_combine[,2])
cor(lung_cell_ratio[,5], cell_combine[,4])
cor(lung_cell_ratio[,6], cell_combine[,10])
CD4_naive=c("CD3D","CD3E","CD3G","CD4","CCR7","SELL","IL7R","ZBTB7B","CD28","SELP","TCF7","LEF1")
#CD8_naive=c("CD3D","CD3E","CD3G","CD8A","CD8B","PTPRC","SELL","IL7R","RUNX3","LEF1","CD28")
CD8_naive=c("CD3D","CD3E","CD3G","CD8A","CD8B","LEF1")
Cytotoxic=c("CD3D","CD3E","CD3G","CD8A","CD8B","TBX21","PRDM1","CD160","PTGDR2","ITGAM")
Exhausted=c("CD3D","CD3E","CD3G","CD8A","CD8B","LAG3","PRDM1","CD244","KLRG1","PDCD1","CD27","TNFRSF9","CD160","ENTPD1","CTLA4")
Tr1=c("CD3D","CD3E","CD3G","CD4","IL10","FOXP3","IL5","IL2RB","CTLA4")
nTreg=c("CD3D","CD3E","CD3G","CD4","FOXP3","STAT5A","STAT5B","FOXO1","FOXO3","IL2RA","CTLA4")
iTreg=c("CD3D","CD3E","CD3G","CD4","FOXP3","FOXO1","FOXO3","STAT5A","STAT5B","IL2RA","SMAD2","SMAD3","SMAD4","CTLA4")
# Th1=c("CD3D","CD3E","CD3G","CXCR6","TBX21","CXCR3","CD4","IL12RB1","IFNGR1","IL2RA","IFNGR2","STAT4","STAT1","TBX21")
# Th2=c("CD3D","CD3E","CD3G","CD4","IL4R","GATA3")
# Th17=c("CD3D","CD3E","CD3G","CD4","CCR6","IL1R1","IL1R2","KLRB1","RORC","STAT3","RORA")
# Tfh=c("CD3D","CD3E","CD3G","CD4","SLAMF1","CD40LG","ICOS","STAT3","BCL6","IL21","CXCL13","ICOS")
Th1=c("CD3D","CD3E","CD3G","CXCR6","TBX21","CD4","IFNGR1","IL2RA","IFNGR2","STAT4","STAT1","TBX21")
Th2=c("CD3D","CD3E","CD3G","CD4","IL4R","GATA3")
Th17=c("CD3D","CD3E","CD3G","CD4","CCR6","IL1R1","IL1R2","KLRB1","RORC","STAT3","RORA")
Tfh=c("CD3D","CD3E","CD3G","CD4","SLAMF1","ICOS","STAT3","BCL6","IL21","CXCL13","ICOS")
Central_memory=c("CD3D","CD3E","CD3G","CCR7","CD44","SELL","IL7R","IL15RA","BMI1","CD40LG","CD4","CD8A","CD8B","ANXA1")
Effector_memory=c("CD3D","CD3E","CD3G","CD44","IL7R","IL15RA","PRDM1","GZMA","GZMB","GZMH","PRF1",
"FASLG","MYO5A","RAB27A","RABGGTA","CD4","CD8A","CD8B")
NKT=c("CD3D","CD3E","CD3G","SLAMF1","TGFBR1","TGFBR2","TGFBR3")
#MAIT=c("KLRB1","IGHMBP2","CCR5","CXCR6","SLC4A10","CCR6","CD44","PTPRC","CD8A","CD8B")
MAIT=c("CD3D","CD3E","CD3G","KLRB1","IGHMBP2","CCR5","CXCR6","SLC4A10","CCR6","CD44","CD8A","CD8B")
Gamma_delta=c("CD3D","CD3E","CD3G","TCRA")
all_genes=unique(c(CD4_naive,CD8_naive,Cytotoxic,Exhausted,Tr1,nTreg,iTreg,Th1,Th2,Th17,Tfh,Central_memory,Effector_memory,NKT,MAIT,Gamma_delta))
paper_marker=list(CD4_naive=CD4_naive,CD8_naive=CD8_naive,Cytotoxic=Cytotoxic,Exhausted=Exhausted,Tr1=Tr1,nTreg=nTreg,iTreg=iTreg,Th1=Th1,Th2=Th2,
Th17=Th17,Tfh=Tfh,Central_memory=Central_memory,Effector_memory=Effector_memory,NKT=NKT,MAIT=MAIT,Gamma_delta=Gamma_delta)
save(paper_marker,file="paper_marker.Rdata")
load("paper_marker.Rdata")
sample=liver_single_cell_exp
sam=apply(sample,2,as.numeric)
row.names(sam)=row.names(sample)
# load("T_cell_gene_set.Rdata")
# load("T_subtype_marker_new.Rdata")
#load("marker_exp.Rdata")
#genes=intersect(row.names(sam),as.vector(unlist(T_subtype_new_marker)))
#genes=intersect(row.names(sam),as.vector(unlist(T_cell_gene_set)))
genes=intersect(row.names(sam),as.vector(unlist(paper_marker)))
sam_exp=sam[genes,]
results=gsva(sam_exp,paper_marker,method="ssgsea")
results = results - apply(results,1,min)
result=results
#result=gsva(sam,marker_test)
#result=gsva(sam,marker_test,method="ssgsea")
#result=gsva(sam_exp,T_subtype_new_marker,method="ssgsea")
abundance_all_sample=c()
for (i in colnames(result)){
nes=result[,i]
cell_type=names(nes)
cell_r=c()
for (cell in cell_type){
if(nes[cell]>0){
abun=0
tmp=intersect(as.vector(unlist((paper_marker[cell]))),row.names(sam))
markers=intersect(tmp,row.names(marker_exp))
count=length(markers)
for (gene in markers){
weight=log10(sam[gene,i]+1)/(marker_exp[gene,cell])
abun=abun+weight
}
cell_r=c(cell_r,abun*nes[cell]/count)
}else{
cell_r=c(cell_r,0)
}
}
abundance_all_sample=rbind(abundance_all_sample,cell_r)
}
row.names(abundance_all_sample)=colnames(result)
#colnames(abundance_all_sample)=colnames(marker_exp)
norm_func=function(x){
s=sum(x)
ratio=1/s
x=x*ratio
return (x)
}
abundance_all_sample_norm=t(apply(abundance_all_sample,1,norm_func))
t=abundance_all_sample_norm
cell_combine=cbind(t[,1],t[,2],t[,3],t[,4],t[,5]+t[,6]+t[,7],t[,8]+t[,9]+t[,10]+t[,11],t[,12],t[,13],t[,14],t[,15],t[,16])
colnames(cell_combine)=c("CD4_naive","CD8_naive","Cytotoxic","Exhausted","Treg","Th","Central_memory","Effector_memory","NKT","MAIT","Gamma_delta")
pheatmap(cell_combine,scale="row")
cor(cell_ratio[,1], cell_combine[,2])
cor(cell_ratio[,2], cell_combine[,10])
cor(cell_ratio[,3], cell_combine[,4])
cor(cell_ratio[,4], cell_combine[,1])
cor(cell_ratio[,5], cell_combine[,5])
cor(cell_ratio[,6], cell_combine[,6])
load("paper_marker.Rdata")
sample=lung_single_cell_exp
sam=apply(sample,2,as.numeric)
row.names(sam)=row.names(sample)
# load("T_cell_gene_set.Rdata")
# load("T_subtype_marker_new.Rdata")
#load("marker_exp.Rdata")
#genes=intersect(row.names(sam),as.vector(unlist(T_subtype_new_marker)))
#genes=intersect(row.names(sam),as.vector(unlist(T_cell_gene_set)))
genes=intersect(row.names(sam),as.vector(unlist(paper_marker)))
sam_exp=sam[genes,]
results=gsva(sam_exp,paper_marker,method="ssgsea")
neg2zero=function(x){
x[which(x<0)]=0
return(x)
}
results=apply(results,2,neg2zero)
results = results - apply(results,1,min)
result=results
#result=gsva(sam,marker_test)
#result=gsva(sam,marker_test,method="ssgsea")
#result=gsva(sam_exp,T_subtype_new_marker,method="ssgsea")
abundance_all_sample=c()
for (i in colnames(result)){
nes=result[,i]
cell_type=names(nes)
cell_r=c()
for (cell in cell_type){
if(nes[cell]>0){
abun=0
tmp=intersect(as.vector(unlist((paper_marker[cell]))),row.names(sam))
markers=intersect(tmp,row.names(marker_exp))
count=length(markers)
for (gene in markers){
weight=log10(sam[gene,i]+1)/(marker_exp[gene,cell])
abun=abun+weight
}
cell_r=c(cell_r,abun*nes[cell]/count)
}else{
cell_r=c(cell_r,0)
}
}
abundance_all_sample=rbind(abundance_all_sample,cell_r)
}
row.names(abundance_all_sample)=colnames(result)
#colnames(abundance_all_sample)=colnames(marker_exp)
norm_func=function(x){
s=sum(x)
ratio=1/s
x=x*ratio
return (x)
}
abundance_all_sample_norm=t(apply(abundance_all_sample,1,norm_func))
t=abundance_all_sample_norm
cell_combine=cbind(t[,1],t[,2],t[,3],t[,4],t[,5]+t[,6]+t[,7],t[,8]+t[,9]+t[,10]+t[,11],t[,12],t[,13],t[,14],t[,15],t[,16])
colnames(cell_combine)=c("CD4_naive","CD8_naive","Cytotoxic","Exhausted","Treg","Th","Central_memory","Effector_memory","NKT","MAIT","Gamma_delta")
pheatmap(cell_combine,scale="row")
cor(lung_cell_ratio[,1], cell_combine[,1])
cor(lung_cell_ratio[,2], cell_combine[,7])
cor(lung_cell_ratio[,3], cell_combine[,5])
cor(lung_cell_ratio[,4], cell_combine[,2])
cor(lung_cell_ratio[,5], cell_combine[,4])
cor(lung_cell_ratio[,6], cell_combine[,10])
MAIT=c("CD3D","CD3E","CD3G","SLC4A10","CD8A","CD8B")
Gamma_delta=c("CD3D","CD3E","CD3G","TCRA")
all_genes=unique(c(CD4_naive,CD8_naive,Cytotoxic,Exhausted,Tr1,nTreg,iTreg,Th1,Th2,Th17,Tfh,Central_memory,Effector_memory,NKT,MAIT,Gamma_delta))
paper_marker=list(CD4_naive=CD4_naive,CD8_naive=CD8_naive,Cytotoxic=Cytotoxic,Exhausted=Exhausted,Tr1=Tr1,nTreg=nTreg,iTreg=iTreg,Th1=Th1,Th2=Th2,
Th17=Th17,Tfh=Tfh,Central_memory=Central_memory,Effector_memory=Effector_memory,NKT=NKT,MAIT=MAIT,Gamma_delta=Gamma_delta)
save(paper_marker,file="paper_marker.Rdata")
load("paper_marker.Rdata")
sample=liver_single_cell_exp
sam=apply(sample,2,as.numeric)
row.names(sam)=row.names(sample)
# load("T_cell_gene_set.Rdata")
# load("T_subtype_marker_new.Rdata")
#load("marker_exp.Rdata")
#genes=intersect(row.names(sam),as.vector(unlist(T_subtype_new_marker)))
#genes=intersect(row.names(sam),as.vector(unlist(T_cell_gene_set)))
genes=intersect(row.names(sam),as.vector(unlist(paper_marker)))
sam_exp=sam[genes,]
results=gsva(sam_exp,paper_marker,method="ssgsea")
results = results - apply(results,1,min)
result=results
#result=gsva(sam,marker_test)
#result=gsva(sam,marker_test,method="ssgsea")
#result=gsva(sam_exp,T_subtype_new_marker,method="ssgsea")
abundance_all_sample=c()
for (i in colnames(result)){
nes=result[,i]
cell_type=names(nes)
cell_r=c()
for (cell in cell_type){
if(nes[cell]>0){
abun=0
tmp=intersect(as.vector(unlist((paper_marker[cell]))),row.names(sam))
markers=intersect(tmp,row.names(marker_exp))
count=length(markers)
for (gene in markers){
weight=log10(sam[gene,i]+1)/(marker_exp[gene,cell])
abun=abun+weight
}
cell_r=c(cell_r,abun*nes[cell]/count)
}else{
cell_r=c(cell_r,0)
}
}
abundance_all_sample=rbind(abundance_all_sample,cell_r)
}
row.names(abundance_all_sample)=colnames(result)
#colnames(abundance_all_sample)=colnames(marker_exp)
norm_func=function(x){
s=sum(x)
ratio=1/s
x=x*ratio
return (x)
}
abundance_all_sample_norm=t(apply(abundance_all_sample,1,norm_func))
t=abundance_all_sample_norm
cell_combine=cbind(t[,1],t[,2],t[,3],t[,4],t[,5]+t[,6]+t[,7],t[,8]+t[,9]+t[,10]+t[,11],t[,12],t[,13],t[,14],t[,15],t[,16])
colnames(cell_combine)=c("CD4_naive","CD8_naive","Cytotoxic","Exhausted","Treg","Th","Central_memory","Effector_memory","NKT","MAIT","Gamma_delta")
pheatmap(cell_combine,scale="row")
cor(cell_ratio[,1], cell_combine[,2])
cor(cell_ratio[,2], cell_combine[,10])
cor(cell_ratio[,3], cell_combine[,4])
cor(cell_ratio[,4], cell_combine[,1])
cor(cell_ratio[,5], cell_combine[,5])
cor(cell_ratio[,6], cell_combine[,6])
load("paper_marker.Rdata")
sample=lung_single_cell_exp
sam=apply(sample,2,as.numeric)
row.names(sam)=row.names(sample)
# load("T_cell_gene_set.Rdata")
# load("T_subtype_marker_new.Rdata")
#load("marker_exp.Rdata")
#genes=intersect(row.names(sam),as.vector(unlist(T_subtype_new_marker)))
#genes=intersect(row.names(sam),as.vector(unlist(T_cell_gene_set)))
genes=intersect(row.names(sam),as.vector(unlist(paper_marker)))
sam_exp=sam[genes,]
results=gsva(sam_exp,paper_marker,method="ssgsea")
neg2zero=function(x){
x[which(x<0)]=0
return(x)
}
results=apply(results,2,neg2zero)
results = results - apply(results,1,min)
result=results
#result=gsva(sam,marker_test)
#result=gsva(sam,marker_test,method="ssgsea")
#result=gsva(sam_exp,T_subtype_new_marker,method="ssgsea")
abundance_all_sample=c()
for (i in colnames(result)){
nes=result[,i]
cell_type=names(nes)
cell_r=c()
for (cell in cell_type){
if(nes[cell]>0){
abun=0
tmp=intersect(as.vector(unlist((paper_marker[cell]))),row.names(sam))
markers=intersect(tmp,row.names(marker_exp))
count=length(markers)
for (gene in markers){
weight=log10(sam[gene,i]+1)/(marker_exp[gene,cell])
abun=abun+weight
}
cell_r=c(cell_r,abun*nes[cell]/count)
}else{
cell_r=c(cell_r,0)
}
}
abundance_all_sample=rbind(abundance_all_sample,cell_r)
}
row.names(abundance_all_sample)=colnames(result)
#colnames(abundance_all_sample)=colnames(marker_exp)
norm_func=function(x){
s=sum(x)
ratio=1/s
x=x*ratio
return (x)
}
abundance_all_sample_norm=t(apply(abundance_all_sample,1,norm_func))
t=abundance_all_sample_norm
cell_combine=cbind(t[,1],t[,2],t[,3],t[,4],t[,5]+t[,6]+t[,7],t[,8]+t[,9]+t[,10]+t[,11],t[,12],t[,13],t[,14],t[,15],t[,16])
colnames(cell_combine)=c("CD4_naive","CD8_naive","Cytotoxic","Exhausted","Treg","Th","Central_memory","Effector_memory","NKT","MAIT","Gamma_delta")
pheatmap(cell_combine,scale="row")
cor(lung_cell_ratio[,1], cell_combine[,1])
cor(lung_cell_ratio[,2], cell_combine[,7])
cor(lung_cell_ratio[,3], cell_combine[,5])
cor(lung_cell_ratio[,4], cell_combine[,2])
cor(lung_cell_ratio[,5], cell_combine[,4])
cor(lung_cell_ratio[,6], cell_combine[,10])
??history
savehistory("~/.Rhistory")
getwd()
load("liver_single_cell_exp.Rdata")
setwd("H:/TCAP")
load("liver_single_cell_exp.Rdata")
write.table(liver_single_cell_exp,file="example.txt",header=T,sep="\t",quote=FALSE)
write.table(liver_single_cell_exp,file="example.txt",sep="\t",quote=FALSE)
load("marker_exp.Rdata")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
